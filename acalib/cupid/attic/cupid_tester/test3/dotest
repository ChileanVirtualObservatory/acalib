#!/bin/tcsh
#
#  Test Description:
#     GaussClumps: 2D data containing a mix of well separated gaussians and 
#     overlapping Gaussians, with high noise.
#
#  Test Notes:
#     - The purpose of the stiffness parameters (sc,sa,s0,etc) is to keep the 
#     Gaussian fit close to the initial guess. But if the noise is high, as 
#     in this test, the initial guess will be heavily influenced by noise.
#     In this case, better fits are obtained by removing the stiffness 
#     constraints. Also, ModelLim needs to be reduced because the higher RMS
#     means that the Gaussians are truncated very early.

rm testout.sdf testout.FIT dotest.fail >& /dev/null

$CUPID_DIR/findclumps in="testdata" \
                      out=testout \
                      method=gaussclumps \
                      config='"modellim=0.5,sa=0,sc=0,s0=0"' \
                      deconv=no \
                      outcat=testout.FIT \
                      repconf=no \
                      ilevel=0 \
                      accept

$KAPPA_DIR/sub testout testmodel diff
$KAPPA_DIR/stats diff > /dev/null

set wantsum=-10571.376290217
set wantmin=-1.88472604751587
set wantmax=1.50211131572723
set wantsigma=0.202951831949992
set wantngood=160801
set wantnclump=102


set got=`$KAPPA_DIR/parget total stats`
set err=`$KAPPA_DIR/calc "'qif(2*abs(pa-pb)/abs(pa+pb)>0.001,1,0)'" pa=$got pb=$wantsum`
if( "$err" == "1" ) then
   echo "   Sum is $got, should be $wantsum"
   touch dotest.fail
endif


set got=`$KAPPA_DIR/parget minimum stats`
set err=`$KAPPA_DIR/calc "'qif(2*abs(pa-pb)/abs(pa+pb)>0.001,1,0)'" pa=$got pb=$wantmin`
if( "$err" == "1" ) then
   echo "   Min is $got, should be $wantmin"
   touch dotest.fail
endif

set got=`$KAPPA_DIR/parget maximum stats`
set err=`$KAPPA_DIR/calc "'qif(2*abs(pa-pb)/abs(pa+pb)>0.001,1,0)'" pa=$got pb=$wantmax`
if( "$err" == "1" ) then
   echo "   Max is $got, should be $wantmax"
   touch dotest.fail
endif

set got=`$KAPPA_DIR/parget sigma stats`
set err=`$KAPPA_DIR/calc "'qif(2*abs(pa-pb)/abs(pa+pb)>0.001,1,0)'" pa=$got pb=$wantsigma`
if( "$err" == "1" ) then
   echo "   Sigma is $got, should be $wantsigma"
   touch dotest.fail
endif

set got=`$KAPPA_DIR/parget numgood stats`
set err=`$KAPPA_DIR/calc "'qif(2*abs(pa-pb)/abs(pa+pb)>0.001,1,0)'" pa=$got pb=$wantngood`
if( "$err" == "1" ) then
   echo "   NGood is $got, should be $wantngood"
   touch dotest.fail
endif


$CURSA_DIR/catheader testout.FIT > /dev/null
set nrow=`$KAPPA_DIR/parget ROWS catheader`
if( "$nrow" != "$wantnclump" ) then
   echo "   NClump is $nrow, should be $wantnclump"
   touch dotest.fail
endif


rm diff.sdf testout.sdf testout.FIT

