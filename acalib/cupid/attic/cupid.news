1 CUPID

 The CUPID package is currently under construction...

 CUPID (ClUmP IDentification) provides commands which identify
 and  analyse clumps of emission within 2- or 3- dimensional
 data arrays.

Changes introduced at V2.2

   - A bug has been fixed in the GaussCLumps algorithm that could cause
   bright, clear clumps to be missed. This could occur if a few pixels
   within the clump had unusually low variances, giving them unusually
   high weights. The GaussClumps.wmin parameter could then cause the
   majority of pixels to be excluded from the fit, causing the clump to
   be missed. This bug has been fixed by changing the way in which the
   weights are normalised prior to applying the cut specified by parameter
   GaussClump.wmin - they are now normalised to a value of the mean plus
   four standard deviations, rather than the maximum value as was done
   previously. This reduces the effect of a few unusually high weights.

Changes introduced at V2.1

   - The default value for the FellWalker.MinDip parameter has changed
   from "3*RMS" to "2*RMS".
   - The default value for the FellWalker.MinHeight parameter has changed
   from "Noise+MinDip" to "Noise".
   - The MAKECLUMPS command now has a new boolean parameter called PRECAT
   that specifies the clump data that should be used to create the output
   catalogue. If PRECAT is FALSE (the default), the catalogue is created
   from the clumps after they have been smoothed with the instrumental beam.
   If PRECAT is TRUE, the catalogue is created from the clumps before they
   have been smoothed. Note, if PRECAT is TRUE, setting DECONV=TRUE will
   have no effect since there is no smoothing to deconvolve in the catalogue.

Changes introduced at V2.0

   - The FINDCLUMPS and EXTRACTCLUMPS commands now have a new parameter
   called JSACAT that allows an output to be created in a form suitable
   for ingestion by the CADC as part of the JCMT Science Archive.

   - MAKECLUMPS can now create clumps even if the output NDF includes
   one or more degenerate pixel axes (i.e pixel axes that span only a
   single pixel).

   - A bug has been fixed in the Fellwalker method that would cause the
   default value to be used for configuration parameters "fellwalker.noise"
   and "fellwalker.mindip" if these parameters were specified in their
   full form in the configuration (for instance as "fellwalker.mindip"
   instead of just "mindip").

   - No prompt is now made for the "RMS" parameter if an RMS value is
   specified in the configuration.

   - The number of clumps rejected due to being smaller than the beam
   size are now reported separately for the spatial and spectral beam
   (but note that a clump reported as rejected due to it spectral width
   being too small may also be too small on the spatial axes).

   - The handling of the fellwalker.flatslope parameter has been modified
   slightly - the initial section of the walk that is ignored now ends
   if the data value exceeds "noise+2*rms" regardless of the gradient.

Changes introduced at V1.6

   - A bug in the GaussClumps method has been fixed which could cause
   clumps to be incorrectly rejected due to being too low.
   - Improvements to the initial guess at the Gaussian parameters of each
   clump has improved the ability of the GaussClumps algorithm to fit
   merged clumps.
   - The FINDBACK command now has a WLIM parameter that specifies the
   minimum fraction of good pixels in a filter box required to create a
   good output value. The defualt is 0.4. This changes the behaviour of
   findback in cases where the input data has any bad values. The degree
   to which FINDBACK fills in such areas of bad data will be reduced.
   - OUTLINECLUMP has an improved user interface and validation of its
   NDF and INDEX parameters.  The INDEX parameter can now be a comma-
   separated list of indices and ranges of indices.

Changes introduced at V1.5

   - The RMS parameter in FINDBACK now be set to a null (!) value in
   order to force an independent default noise value to be calculated and
   used for each slice of supplied NDF.
   - FINDBACK now uses mutiple processors or cores (if available) to
   speed up the the procesing of independent slices.

Changes introduced at V1.4

   - A bug in the GaussClumps method that could cause Gaussian model
   clumps to have straight edges has been fixed.

Changes introduced at V1.3

   - A serious error in the use of the FellWalker.MinDip parameter has been
   corrected. Previously, many clumps were being merged that should not have
   been merged (i.e. clumps separated by a dip of more than MinDip).
   Consequently, this fix causes FellWalker to report more clumps.

Changes introduced at V1.2

   - MAKECLUMPS now allows clump parameters to be distributed
     using a Poisson distribution.

   - MAKECLUMPS now allows a SHAPE column to be added to the output
     catalogue, holding the STC-S outline of each clump. See parameter
     SHAPE.

   - MAKECLUMPS now allows the output WCS to be copied from an input
     NDF. See parameter LIKE.


Changes introduced at V1.1

   - For consistency with other Starlink applications the ILEVEL
     parameter has been renamed MSG_FILTER.

   - The MaxBad configuration parameter should now be given as a fraction
     of the total number of pixels in the clump. Previously, MaxBad
     was given as an absolute number of pixels, but this unfairly
     discriminates against large clumps that by their nature tend to
     include more bad pixels. This was particularly noticable with the
     FellWalker algorithm which tends to produce larger clumps than (say)
     ClumpFind.


Changes introduced at V1.0

   - The time has come to recognise that CUPID is no longer an
     experimental concept, and so the format of the version number
     has been changed.

   - FINDCLUMPS has a new parameter called SHAPE that allows an optional
     column holding a textual description of the spatial shape of each
     clump to be added to the output catalogue. The format for this
     description is the STC-S format developed by the IVOA. These shapes
     can be plotted using either KAPPA:LISTSHOW or GAIA.

Changes introduced at V0.0-39:

   - The message filtering system has been modified to use the standard
     Starlink approach. ILEVEL has been retained but can now use the
     standard NONE, QUIET, NORM, VERB, DEBUG strings as defined in the
     MERS system. These are equivalent to ILEVEL 0, 1, 2, 3, and 4
     respectively.

     FINDBACK now reports verbose messages at an ILEVEL of VERB (3) rather
     than ILEVEL 1 as previously implemented. Some script modifications may
     be required. The default (NORM) still results in no message output.

     The FINDCLUMPS command now uses ILEVEL that is one bigger than
     previously to obtain the same result. This is because the default
     messaging level (NORM; equivalent of 2 in MERS) is equivalent
     to the previous ILEVEL of 1. So where an ILEVEL of 5 was used previously
     this should now be a 6 (DEBUG2). If ILEVEL has not previously been
     used the output should be as before. Messages that could previously
     not be turned off at all are now at the QUIET (1) level and can be
     disabled with ILEVEL=NONE (ILEVEL=0).

Changes introduced at V0.0-38:

   - Use a dynamic default of FALSE for parameter "BACKOFF" if METHOD is
   "ClumpFind" and the Clumpfind.IDLAlg configuration parameter is set
   non-zero. Otherwise use a dynamic default of TRUE.

Changes introduced at V0.0-37:

   - Add parameter "BACKOFF" to FINDCLUMPS. It controls whether or not
   the background level in a clump is removed from the clump data values
   before calculating the clump sizes and centroid position. Set it to
   FALSE to compare clump parameters with those found by the IDL version
   of CLUMPFIND.


Changes introduced at V0.0-36:

   - Add parameter "PERSPECTRUM" to FINDCLUMPS. If this parameter is
   set TRUE, it causes each spectrum in a spectral cube to be processed
   independently of its neighbours. This will in general cause lots more
   clumps to be reported since a single source that spans more than one
   spectrum will result in multiple clumps.
   - A bug that caused the top contour level to be ignored when using the
   ClumpFind method within FINDCLUMPS has been fixed.
   - The FellWalker algorithm has been changed slightly in that adjacent
   clumps with shallow dips between them (as specified by FellWalker.MinDip)
   are merged before, rather than after, the clumps are cleaned (as
   specified by FellWalker.CleanIter).


Changes introduced at V0.0-35:

   - Add configuration parameter FellWalker.AllowEdge that can be set to
   zero to reject clumps that touch an edge of the array. Note, unlike
   ClumpFind.AllowEdge, FellWalker.AllowEdge defaults to 1 (this is to
   retain backward compatibility with previous versions of CUPID).


Changes introduced at V0.0-34:

   - Fix a bug that could cause spurious values to appear the catalogue
   columns produced using the ExtraCols configuration parameter.


Changes introduced at V0.0-33:

   - FINDCLUMPS has a new output parameter called NCLUMPS to which is
   written the number of clumps identified by FINDCLUMPS.
   - The algorithm used by FINDBACK to estimate the bias between the
   noise-free background and the lower envelope of the data has been
   changed to better cope with high noise cases.
   - FellWalker bug fixed that could cause inappropriate clumps to be
   merged together.
   - Fix bug that could prevent configuration parameters being read if
   they are qualified by their method name (e.g. "FellWalker.MinDip" as
   opposed to just "MinDip").

Changes introduced at V0.0-32:

   - New application call CLUMPINFO added, which reports information
   about one or more previously identified clumps. Currently, it just
   returns the total number of clumps detected and the bounding box of
   a specified list of clumps.
   - Plug NDF identifier leak that could cause error messages about "all
   slots being used".

Changes introduced at V0.0-31:

   - FellWalker: the default value for FellWalker.MinDip changed from 2*RMS
   to 3*RMS.
   - FellWalker diagnostic information extended (accessed viathe ILEVEL
   parameter)
   - Fellwalker: the removal of isolated pixels prior to initiating the
   walking process has been improved for 1 and 2 D data.
   - Fellwalker: bug fixed that could prevent merger of adjacent clumps
   separated by less than MinDip, if only one pair of clumps is to be
   merged.
   - Allow selected configuration parameters for FellWalker, ClumpFind
   and Reinhold to be specified either as an absolute data value, or as a
   multiple of the RMS noise, using the syntax "[x]*RMS" (e.g. "3.2*RMS").


Changes introduced at V0.0-30:

   - GaussClumps: Reduce the initial guess at the clump peak value by
   subtracting the RMS noise level from the peak data value (the noise
   will normally cause the peak data value to be larger than the peak
   clump value).
   - Default value for GaussCLumps.ModelLim changed from 1.0 to 0.5. A
   lower value works better with higher noise data, and should not make
   much difference with lower noise data.

Changes introduced at V0.0-29:

  - Fixed a bug that could cause huge negative pixel values to be
  introduced into clump cut-outs and statistics produced by FellWalker
  or Reinhold when using FINDCLUMPS.
  - When using GaussClumps to find clumps, issue a warning message if
  the total input data sum is negative, as this probably indicates that
  there is a negative background level. GaussClumps assumes that any
  background level has first been removed (e.g. using CUPID:FINDBACK).
  - FINDBACK has a new parameter called SUB that be set TRUE to indicate
  that the output NDF should hold the background-subtracted input data,
  rather than the background estimate itself.
  - FINDBACK has a new parameter called RMS that can be used to override
  the RMS noise estimate calculated by FINDBACK. If the data contains
  correlated noise, then the internal RMS noise estimate will be too low,
  resulting in the final background estimate being systematically too low.

Changes introduced at V0.0-28:
  - GaussClumps now has an additional termination crietrion; if the total
  integrated sum in the fitted Gaussians equals or exceeds the total
  integrated data sum in the input array, then the iterative fitting process
  will terminate. This is the termination criterion described by Stutzki
  and Gusten in their paper describing GaussClumps. GaussClumps has several
  terminiation criteria, and the process terminates when the first such
  criterion is met.
  - Gaussians fitted by GaussClumps are now constrained to have positive
  background values.
  - The default value for the GaussClumps.ModelLim configuration
  parameter has been changed from 3.0 to 1.0.
  - Bug fixed in the algorithm used to make the initial guess at the
  clump size when using GaussClumps. This bug could cuase segmentation
  violations when fitting low signal-to-noise clumps.

Changes introduced at V0.0-27:

 - The algorithm used to make the initial guess at the clump size when
   using GaussClumps has been improved to better cater for high noise cases.
 - For 1D data, the VeloStart and VeloRes configuration parameters are now
   used instead of FWHMStart and FWHMBeam (since 1D data is usually
   spectral).

Changes introduced at V0.0-26:

 - Fix a bug that could cause an error to be reported saying "supplied
   locator is not a NULL pointer" when using FINDCLUMPS with the
   GaussClumps method and the "ExtraCols=1" configuration option.

Changes introduced at V0.0-25:

 - Add new command OUTLINECLUMP, which draw an outline of a 2D clump on a
   previously displayed image. This is just a C-shell script that wraps
   the KAPPA:CONTOUR command.

Changes introduced at V0.0-24:

 - Add WCSPAR and LOGFILE parameters to EXTRACTCLUMPS.

Changes introduced at V0.0-23:

 - If WCSPAR=YES, store RA and Dec values in degs rather than rads.
 - Add units strings to log file output.

Changes introduced at V0.0-22:

 - Added new program parameter LOGFILE which can be used to create a text
   log file containing clump values and parameter values.
 - Added new program parameter WCSPAR which can be set TRUE to get a
   catalogue containing positions and sizes in WCS coordinates rather than
   pixel coordinates.
 - The configuration parameter GaussClumps.ExtraCOls can be set to 1 to
   get additional GaussClumps-specific columns in the output catalogue.
 - The parameters used (both configuration and ADAM) are now recorded in the
   HISTORY section of the output catalogue.

Changes introduced at V0.0-21:

 - Added new program parameter DECONV which can be set FALSE in order to
   prevent the reported clump sizes and peak values being modified to
   take account of the instrumental beam smoothing.

Changes introduced at V0.0-20:

 - Introduction of a new command called FINDBACK, which uses spatial
   filtering to remove small-scale structure from the input NDF, thus
   producing an estimate of the background within the NDF.

Changes introduced at V0.0-19:

 - FINDCLUMPS has a new parameter, QOUT, which specifies the name of a
   secondary output NDF. This secondary NDF holds a copy of the input NDF,
   but with the Quality array (and associated quality name information)
   copied from the main output NDF (specified by parameter OUT).


Changes introduced at V0.0-18:

 - Guard against null HDS locator errors when GaussClumps cannot find any
   clumps.

 - Issue a warning if configuration parameters are not separated by commas
   or new lines in the CONFIG value.

 - Speed up FellWalker a bit.


Changes introduced at V0.0-18:

 - Guard against division by zero when using zero beam width with
   GaussClumps.

 - Add a signal handler that will allow GaussClumps to save the clumps
   found so far when interrupted using control-c.

 - Change default for FellWalker.CleanIter from 3 to 1 (for greater speed
   and more realistic clump shapes).

 - Tidy up diagnostic information displayed by FellWalker

 - Remove isolated pixels above the noise threshold before starting the
   walking process in FellWalker.


Changes introduced at V0.0-17:

 - Fixed various harmless compiler warnings.


Changes introduced at V0.0-16:

 - Fixed bug in MAKECLUMPS that could prevent the requested number of
   clumps from being created.

 - Minor change to Reinhold algorithm to try to improve performance with
   3D data.


Changes introduced at V0.0-15:

 - Fixed bug in the emulation of the IDL implementation of the
   ClumpFind algorithm.

 - Fixed bugs in FellWalker that could produce erroneous clump assignments.


Changes introduced at V0.0-14:

 - Added a new configuration parameter (ClumpFind.IDLAlg) that can be
   used to force FINDCLUMPS to emulate the IDL implementation of the
   ClumpFind algorithm, rather than the algorithm as described in the
   Williams et al ApJ paper.

 - Fixed bug that caused GAUSSCLUMPS method not to be recognised.

Changes introduced at V0.0-13:

 - Additional text in SUN255.

 - The FINDCLUMPS command has a new configuration parameter
   ClumpFind.AllowEdge that can be set to a non-zero value in order to
   retain clumps that touch an edge of the data array.

Changes introduced at V0.0-12:

 - The MAKESNR command has been moved from CUPID to KAPPA.

 - A new command called EXTRACTCLUMPS has been added to the CUPID package.
 This uses the pixel mask created by FINDCLUMPS (when using methods
 ClumpFind, Reinhold or FellWalker) to extract clump parameters from
 another data array. For instance, if FINDCLUMPS is run on an SNR array,
 EXTRACTCLUMPS can then be used to calculate the parameters of the
 corresponding clumps in the original data array.


Changes introduced at V0.0-11:

 - The CLUMPS command has been renamed as FINDCLUMPS. However, CLUMPS
 will still be recognised as an alias for FINDCLUMPS.

 - A new configuration parameter called MaxBad has been added to all
 algorithms. It specified the maximum number of bad pixels which may
 adjoin a clump. If this number is exceeded, the clump is excluded.

 - A new application called "makesnr" has been added to the cupid
 package. This creates a signal-to-noise NDF by dividing the Data array
 of the input NDF by the square root of its Variance array. Pixels with
 Variances below a given value are set bad in the output. The cleverness
 lies in the choice of the default value for this limit Variance value.
 This application has been added to facilitate running the CLUMPS command
 on a signal-to-noise array rather than a simple signal array, thus
 allowing spatial variation in the noise level to be taken into account
 when finding clumps. If the data is going to be smoothed before finding
 clumps, the smoothing should be applied to the SNR array rather than the
 original array.


Changes introduced at V0.0-10:

 - The default value for the MinPix configuration parameter (that
 specified the minimum number of pixels in a clump) has been modified
 so that it corresponds to one beam area. However, if the beam area is
 less than 16 pixels, then the old default of 16 is retained.

 - Clumps are now rejected if they touch or contain any bad pixels.
 (but see the MaxBad configuration parameter added at V0.0-11).

Changes introduced at V0.0-9:

 - A further filter is now applied to the clump list to reject clumps
 which are smaller than the beam size specified by configuration
 parameters FWHMBeam and VeloRes. Note, the reported clump sizes are
 smaller than the observed clump sizes because they are corrected for the
 smoothing produced by the instrument beam. The new filter is applied
 before this correction, and so clumps sizes smaller than the beam size
 may still be reported. The main effect of this filter is to remove
 clumps which were previously reported as having zero size.



Changes introduced at V0.0-8:

 - The output catalogue now inherits any WCS FrameSet from the input NDF.

 - Clumps which span only a single pixel along any pixel axis are now
 rejected.


Changes introduced at V0.0-7:

 - ClumpFind, Reinhold and FellWalker all now sort the output catalogue
 into descending peak value order.

 - The GaussClumps algorithm no longer includes clumps in the output
 catalogue or image if they touch an edge of the data array. This brings
 it into line with the other algorithms.

 - The output NDF created by the GaussClumps algorithm no longer includes
 the constant background level which was previously added in order to
 make the mean of the output data array equal to the mean of the input data
 array. This brings it into line with the other algorithms which assume
 zero background level.

 - The BACK parameter has been removed from the MAKECLUMPS command. This
 is fall into line with the assumption of zero background level made by
 the clump finding algorithms.

 - Added test_data.sdf and test_data.FIT as standard test files.


Changes introduced at V0.0-6:

 - The clump parameters returned in the catalogue now are corrected for
 the effects of smoothing by the instrumental beam. That is, the values
 in the clump size columns are now slightly smaller (i.e. the burring
 produced by the beam is removed), and the values in the peak value
 column are slightly higher (i.e. the reduction in peak value caused by
 the beam size is removed). This means that the catalogue values reflect
 the properties of the clump *before* the instrumental smoothing. The
 degree of smoothing introduced by the beam is specified by the
 configuration parameters, FWHMBeam and VeloRes. Previously, only the
 GaussClumps algorithm had these configuration parameters, but now all
 algorithms have them.

 - The GaussClumps algorithm has been changed slightly to correct for the
 tendency of the instrumental smoothing to reduce the peak clump value
 (the tendency to of the instrumental smoothing to increase clump size was
 already corrected for).


Changes introduced at V0.0-5:

 - The MASK parameter has been removed. The Quality mask is now always
  written to the output NDF.

 - The OUT parameter is no longer optional.

 - The input NDF is now accessed in READ mode rather than UPDATE mode.

 - The clump information is now written to the CUPID extension of the
 output NDF rather than the input NDF.

 - The default value for the Reinhold.Thresh configuration parameter has
 been changed from "Noise+RMS" to "Noise+2*RMS" in order to make it the
 same as the defaults for the equivalent parameters for the other
 algorithms.

 - The default value for the GaussClumps.Thresh configuration parameter has
 been changed from 20 to 2 in order to make it the same as the defaults for
 the equivalent parameters for the other algorithms.

 - The default values for the GaussClumps.VeloRes and GaussClumps.FWHMBeam
 configuration parameters have been changed from 3.0 to 2.0 in order to make
 them more comparable to the defaults for the equivalent parameters for the
 other algorithms.


Changes introduced at V0.0-4:

 - The FellWalker algorithm algorithm has been changed so that the
 initial flat section of a walk is only ignored if the walk starts at or
 close to the background level. This fixes a problem in which pixels with
 a large data value (well above the background level) were not assigned to
 any clump if they occurred within a flat area between higher peaks.

 - The FellWalker algorithm has been modified so that neighbouring clumps
 are merged together into a single clump unless there is a significant dip
 between the peaks of the clumps. The depth of the dip needed to prevent
 adjoining peaks from being merged is given by a new configuration parameter
 called FellWalker.MinDip. This reduces the number of distinct clumps
 typically identified by the FellWalker algorithm.

 - The FellWalker algorithm algorithm has been changed so that only those
 clumps which have a peak data value above a specified value are accepted.
 The limiting data value is specified by the new configuration parameter
 FellWalker.MinHeight.


Changes introduced at V0.0-3:

 - The reporting of the current configuration at the end of the CLUMPS
 command now includes each parameter only once.

 - The default value for ClumpFind.DeltaT is now set to twice the RMS noise
 level no matter how many contours this would produce. Previously, the
 default value was higher than 2*RMS if necessary in order to limit the
 number of contours to 100.

 - The value supplied for the "RMS" program parameter can now be
 over-ridden by supplying a different value in the configuration file.
 The used RMS value is included in the displayed configuration at the end
 of the CLUMPS command.


Changes introduced at V0.0-2:

 - All algorithms have been re-worked slightly to avoid a limit of 2048
 on the total number of usable clumps which can be found. This limit was
 imposed by the ARY library. The total number of usable clumps is now
 unlimited.

 - The ClumpFind algorithm has been re-worked to avoid a limit of about
 8000 on the total number of candidate clumps (many of these would
 usually be rejected as being too small). The total number of candidate
 clumps is now unlimited.


